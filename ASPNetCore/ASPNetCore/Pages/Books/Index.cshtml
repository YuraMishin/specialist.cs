@page
@using System.Linq
@model ASPNetCore.Pages.Books.IndexModel
@{
  ViewData["Title"] = "Index";
}

<h1>Books</h1>
<p>
  <a asp-page="Upsert">
    Create / Update a Book
  </a>
</p>
<form method="post">
  @if (Model.Books.Any())
  {
    <table class="table table-striped border">
      <tr class="table-secondary">
        <th>
          <label asp-for="Books.FirstOrDefault().Name"></label>
        </th>
        <th>
          Edit
        </th>
        <th>
          Delete
        </th>
      </tr>
      @foreach (var book in Model.Books)
      {
        <tr>
          <td>
            @Html.DisplayFor(model => book.Name)
          </td>
          <td>
            <a asp-page="Upsert"
               asp-route-id="@book.Id"
               class="btn btn-success btn-sm text-white">
              Edit
            </a>
          </td>
          <td>
            <button asp-page-handler="Delete"
                    asp-route-id="@book.Id"
                    onclick="return confirm('Are you sure?')"
                    class="btn btn-danger btn-sm">
              Delete
            </button>
          </td>
        </tr>
      }
    </table>
  }
  else
  {
    <p>No books available.</p>
  }
</form>
<div class="col-12" style="text-align: center">
  <h3 class="h3 text-info">DataTables JS</h3>
</div>
<div class="col-12 border p-3">
  <table id="DT_load" class="table table-striped table-bordered" style="width: 100%">
    <thead>
      <tr>
        <th>Name</th>
        <th></th>
      </tr>
    </thead>
  </table>
</div>

@section Scripts
{
  <script src="~/js/bookList.js"></script>
}
